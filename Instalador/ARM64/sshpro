#!/bin/bash
clear

RED='\033[1;31m'
YELLOW='\033[1;33m'
SCOLOR='\033[0m'

[[ "$EUID" -ne 0 ]] && {
    echo -e "${RED}[x] VC PRECISA EXECULTAR COMO USUARIO ROOT !${SCOLOR}"
    exit 1
}

executar_comando() {
    local comando="$1"
    local mensagem="$2"
    local delay=0.1
    local percent=0
    local bar=""

    echo -e "${YELLOW}${mensagem:0:50}${NC}"
    echo -n ' '
    
    eval "$comando" & local cmd_pid=$!
    
    while kill -0 $cmd_pid 2>/dev/null; do
        percent=$((percent + 1))
        if [ $percent -ge 100 ]; then
            percent=100
        fi
        echo -ne "       \r$percent% [${bar:0:$((percent / 5))}]"
        sleep $delay
        bar=$(printf "%-30s" | tr ' ' '#')
    done

    wait $cmd_pid
    if [ $? -eq 0 ]; then
        percent=100
        echo -ne "       \r$percent% [${bar:0:20}]\n"
    else
        echo -e "\r${RED}Erro ao executar o comando.${NC}"
    fi
    
    echo
    sleep 1
}

install_python() {
    # INSTALA PYTHON AO PYTHON2
    apt-get install python -y >/dev/null 2>&1
    apt-get install python2 -y >/dev/null 2>&1
    # INSTALA PYTHON3.6 AO PYTHON3.9
    apt-get install python3.6 -y >/dev/null 2>&1
    apt-get install python3.7 -y >/dev/null 2>&1
    apt-get install python3.8 -y >/dev/null 2>&1
    apt-get install python3.9 -y >/dev/null 2>&1
	sudo add-apt-repository ppa:deadsnakes/ppa >/dev/null 2>&1
	apt-get install python3.10 -y >/dev/null 2>&1
    # CRIA ALTERNATIVAS PYTHON
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2 >/dev/null 2>&1
	update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 4 >/dev/null 2>&1
	update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 5 >/dev/null 2>&1
    # INSTALA PIP
    apt install pip -y &> /dev/null
    apt install python3-pip -y &> /dev/null
    # INSTALA SOCAT
    apt install socat -y &> /dev/null
    #SETAR PYTHON3
    update-alternatives --set python3 /usr/bin/python3.8
	echo '#DNS=8.8.8.8' >>/etc/systemd/resolved.conf
	echo '#FallbackDNS=8.8.4.4' >>/etc/systemd/resolved.conf
	service systemd-resolved restart >/dev/null 2>&1
    echo 'net.ipv6.conf.all.disable_ipv6 = 0' >>/etc/sysctl.conf
	echo 'net.ipv6.conf.default.disable_ipv6 = 0' >>/etc/sysctl.conf
	echo 'net.ipv6.conf.lo.disable_ipv6 = 0' >>/etc/sysctl.conf
}

[[ -f "$HOME/usuarios.db" ]] && {
    clear
    echo -e "\033[0;36m╔═══════════════════════════•⊱✦⊰•═══════════════════════════╗\033[0m"
    echo -e "\033[1;37m     DADOS DE CLIENTES ENCONTRADO!"
    echo -e "\033[0;36m° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° ° °\033[0m"
    echo -e "\033[0;31m   [\033[1;36m01\033[0;31m] \033[1;37m• \033[1;37mMANTER DADOS ATUAIS\033[0m"
    echo -e "\033[0;31m   [\033[1;36m02\033[0;31m] \033[1;37m• \033[1;37mCRIAR UMA NOVA BASE DE DADOS\033[0m"
    echo -e "\033[0;36m╚═══════════════════════════•⊱✦⊰•═══════════════════════════╝\033[0m"
    tput setaf 2
    tput bold
    awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' >$HOME/usuarios.db
    tput sgr0
}

atualizar_lista() {
    apt-get update -y
    [[ ! -d /usr/share/.sshpro ]] && mkdir /usr/share/.sshpro
        echo "crz: $(date)" >/usr/share/.sshpro/.sshpro
}

instalar_pacote() {
    _pacotes=("bc" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "python-pip" "python" "at")
    for _prog in ${_pacotes[@]}; do
        apt install $_prog -y
    done
	[[ -f "/usr/sbin/ufw" ]] && ufw allow 443/tcp
    ufw allow 80/tcp
    ufw allow 3128/tcp
    ufw allow 8799/tcp
    ufw allow 8080/tcp
	ufw allow 6969/tcp
}

atualiar_script() {
    rm -rf /root/instalar >/dev/null 2>&1
    wget -O /root/install https://raw.githubusercontent.com/xyzeusyx/SSH-PRO/refs/heads/main/Sistema/install > /dev/null 2>&1
    chmod +x /root/install >/dev/null 2>&1
    /root/install >/dev/null 2>&1
    sleep 3s
    echo "/bin/menu" >/bin/h && chmod +x /bin/h >/dev/null 2>&1
    rm versao* >/dev/null 2>&1
    wget https://raw.githubusercontent.com/xyzeusyx/SSH-PRO/main/Sistema/versao >/dev/null 2>&1
    rm v2raymanager >/dev/null 2>&1
    wget https://raw.githubusercontent.com/xyzeusyx/SSH-PRO/main/Modulos/v2raymanager >/dev/null 2>&1
    wget https://raw.githubusercontent.com/xyzeusyx/SSH-PRO/main/Modulos/botteste.sh >/dev/null 2>&1
    chmod 777 v2raymanager >/dev/null 2>&1
    chmod 777 botteste.sh >/dev/null 2>&1
    mkdir $HOME/BOT >/dev/null 2>&1
    cd $HOME/BOT
    wget https://raw.githubusercontent.com/xyzeusyx/SSH-PRO/main/Sistema/ShellBot.sh >/dev/null 2>&1
    chmod 777 ShellBot.sh >/dev/null 2>&1
    cd >/dev/null 2>&1
    chmod 777 licence >/dev/null 2>&1
    mkdir /etc/rec >/dev/null 2>&1
    cd /etc/rec
    wget https://raw.githubusercontent.com/xyzeusyx/SSH-PRO/main/Sistema/licence >/dev/null 2>&1
    chmod 777 licence >/dev/null 2>&1
    cd >/dev/null 2>&1
}

instalar_speedtest(){
    apt-get autoremove speedtest-cli -y >/dev/null 2>&1
	apt-get remove speedtest -y >/dev/null 2>&1
	curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | sudo bash >/dev/null 2>&1
	mkdir -p /etc/apt/keyrings >/dev/null 2>&1
	chmod 755 /etc/apt/keyrings >/dev/null 2>&1
	curl -fsSL https://packagecloud.io/ookla/speedtest-cli/gpgkey | gpg --dearmor > /etc/apt/keyrings/ookla_speedtest-cli-archive-keyring.gpg >/dev/null 2>&1
	apt-get update -y >/dev/null 2>&1
	apt-get upgrade -y >/dev/null 2>&1
	apt-get install speedtest -y >/dev/null 2>&1
}

echo -e "\033[0;36m          
          ____ ____  _   _       ____  ____   ___   
         / ___/ ___|| | | |     |  _ \|  _ \ / _ \  
         \___ \___ \| |_| |_____| |_) | |_) | | | | 
          ___) |__) |  _  |_____|  __/|  _ <| |_| | 
         |____/____/|_| |_|     |_|   |_| \_|\___/  
                                                     \033[0m"
echo ""
#---------------------------------------------------------------
executar_comando "atualiar_script &> /dev/null" "ATUALIZANDO SCRIPT"
    echo ""
executar_comando "instalar_pacote &> /dev/null" "INSTALANDO PACOTES"
    echo ""
executar_comando "install_python &> /dev/null" "OTIMIZANDO PYTHON"
    echo ""
executar_comando "instalar_speedtest &> /dev/null" "INSTALANDO SPEEDTEST"
    echo ""
executar_comando "atualizar_lista &> /dev/null" "CONCLUINDO DEFINIÇÕES (AGUARDE)"
    echo ""
    cd $HOME
    echo -e "        \033[1;33m • \033[1;32mINSTALACAO CONCLUIDA\033[1;33m • \033[0m"
	echo "clear" >> /root/.bashrc
	echo 'echo -e ""' >>/root/.bashrc
	echo 'echo -e "\033[1;32m DIGITE : \033[1;31mmenu\033[1;37m"' >>/root/.bashrc
	echo 'echo -e ""' >>/root/.bashrc
	
clear
    cd $HOME
    echo -e "\033[0;36m          
          ____ ____  _   _       ____  ____   ___   
         / ___/ ___|| | | |     |  _ \|  _ \ / _ \  
         \___ \___ \| |_| |_____| |_) | |_) | | | | 
          ___) |__) |  _  |_____|  __/|  _ <| |_| | 
         |____/____/|_| |_|     |_|   |_| \_|\___/  
                                                     \033[0m"
    echo -e "\033[01;31m\033[1;31m\033[5;34;47m                INSTALACAO CONCLUIDA               \033[1;33m \033[0m\033[01;31m"
	echo -e "\033[01;31m\033[1;33mPARA INICIAR DIGITE: \033[1;32mmenu\033[0m"
    rm $HOME/sshpro && cat /dev/null > ~/.bash_history && history -c